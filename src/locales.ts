export type L = "ru" | "en";

const dict: Record<L, Record<string, string>> = {
  ru: {
    welcome: "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É. –û—Ç–ø—Ä–∞–≤—å –≥–æ—Ä–æ–¥ –∫–æ–º–∞–Ω–¥–æ–π /setcity –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Å—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.",
    ask_city: "–í–≤–µ–¥–∏ –≥–æ—Ä–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Berlin) –∏–ª–∏ –ø—Ä–∏—à–ª–∏ üìç –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.",
    saved_city: "–ì–æ—Ä–æ–¥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {city}. –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {tz}",
    not_found: "–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.",
    need_city_first: "–°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–π –≥–æ—Ä–æ–¥ —á–µ—Ä–µ–∑ /setcity –∏–ª–∏ –ø—Ä–∏—à–ª–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.",
    current_weather: "{city} ‚Ä¢ –°–µ–π—á–∞—Å\n{line1}\n{line2}\n{today}",
    forecast_title: "{city} ‚Ä¢ –ë–ª–∏–∂–∞–π—à–∏–µ 12 —á–∞—Å–æ–≤",
    subs_on: "–ï–∂–µ–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ {time}.",
    subs_off: "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.",
    units_now: "–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è: {units}",
    units_set: "–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞ {units}",
    lang_now: "–¢–µ–∫—É—â–∏–π —è–∑—ã–∫: {lang}",
    lang_set: "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {lang}",
    send_time: "–ü—Ä–∏—à–ª–∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM (–Ω–∞–ø—Ä–∏–º–µ—Ä, 08:00).",
    invalid_time: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è. –§–æ—Ä–º–∞—Ç HH:MM.",
    no_tz: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å. –£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥/–ª–æ–∫–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ.",
    help: "–ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –Ω–∞—á–∞—Ç—å\n/setcity <–≥–æ—Ä–æ–¥> ‚Äî –∑–∞–¥–∞—Ç—å –≥–æ—Ä–æ–¥\n/weather ‚Äî –ø–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å\n/forecast ‚Äî –ø—Ä–æ–≥–Ω–æ–∑\n/units ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å metric/imperial\n/subscribe HH:MM ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞\n/unsubscribe ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å —Å–≤–æ–¥–∫—É",
  },
  en: {
    welcome: "Hi! I can show the weather. Set your city via /setcity or share your location with the button below.",
    ask_city: "Type a city (e.g. Berlin) or send your üìç location.",
    saved_city: "Saved city: {city}. Timezone: {tz}",
    not_found: "City not found. Try again.",
    need_city_first: "Please set a city first via /setcity or send your location.",
    current_weather: "{city} ‚Ä¢ Now\n{line1}\n{line2}\n{today}",
    forecast_title: "{city} ‚Ä¢ Next 12 hours",
    subs_on: "Daily summary is scheduled at {time}.",
    subs_off: "Daily summary disabled.",
    units_now: "Units: {units}",
    units_set: "Units updated to {units}",
    lang_now: "Language: {lang}",
    lang_set: "Language changed to {lang}",
    send_time: "Send time in HH:MM (e.g. 08:00).",
    invalid_time: "Invalid time. Use HH:MM.",
    no_tz: "Could not detect timezone. Please set city/location again.",
    help: "Commands:\n/start ‚Äî start\n/setcity <city> ‚Äî set city\n/weather ‚Äî current\n/forecast ‚Äî forecast\n/units ‚Äî toggle metric/imperial\n/subscribe HH:MM ‚Äî daily summary\n/unsubscribe ‚Äî disable summary",
  }
};

export function t(lang: L, key: string, vars: Record<string, string|number> = {}) {
  const base = dict[lang]?.[key] || dict.en[key] || key;
  return Object.entries(vars).reduce((acc, [k, v]) => acc.replace(new RegExp(`\\{${k}\\}`, "g"), String(v)), base);
}